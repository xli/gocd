<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2015 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       default-init-method="init">

    <context:annotation-config/>
    <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/>
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

    <import resource="propertyConfigurer.xml"/>

    <task:scheduled-tasks>
        <task:scheduled ref="configRepository" method="garbageCollect" cron="${go.config.repo.gc.cron}"/>
        <task:scheduled ref="configRepositoryGCWarningService" method="checkRepoAndAddWarningIfRequired" fixed-delay="${go.config.repo.gc.check.interval}"/>
    </task:scheduled-tasks>
    <task:scheduler id="scheduler" pool-size="1"/>

    <bean name="/remoteBuildRepository" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter"
          p:service-ref="buildRepositoryImpl"
          p:serviceInterface="com.thoughtworks.go.remote.BuildRepositoryRemote"/>

    <task:scheduled-tasks>
        <task:scheduled ref="pipelineScheduler" method="onTimer" fixed-delay="${cruise.produce.build.cause.interval}" initial-delay="${cruise.produce.build.cause.delay}"/>
        <task:scheduled ref="scheduleService" method="autoSchedulePipelinesFromRequestBuffer" fixed-delay="1000" initial-delay="10000"/>
        <task:scheduled ref="scheduleService" method="rescheduleHungJobs" fixed-delay="300000" initial-delay="3000"/>
        <task:scheduled ref="scheduleService" method="cancelHungJobs" fixed-delay="300000" initial-delay="3000"/>
        <task:scheduled ref="goDiskSpaceMonitor" method="onTimer" fixed-delay="5000" initial-delay="5000"/>
        <task:scheduled ref="buildAssignmentService" method="onTimer" fixed-delay="10000" initial-delay="5000"/>
        <task:scheduled ref="cachedFileGoConfig" method="onTimer" fixed-delay="5000" initial-delay="5000"/>
        <task:scheduled ref="materialUpdateService" method="onTimer" fixed-delay="30000" initial-delay="10000"/>
        <task:scheduled ref="agentService" method="refresh" fixed-delay="${cruise.agent.service.refresh.interval}" initial-delay="10000"/>
    </task:scheduled-tasks>

    <bean id="buildRepositoryRemoteImpl" class="com.thoughtworks.go.remote.BuildRepositoryRemoteImpl" />

    <bean id="buildRepositoryImpl" class="com.thoughtworks.go.server.messaging.BuildRepositoryMessageProducer" autowire="constructor"/>
</beans>
